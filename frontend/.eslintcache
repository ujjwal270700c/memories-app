[{"/Users/ujjwal/Desktop/Home/milstone/Mern auth/frontend/src/index.js":"1","/Users/ujjwal/Desktop/Home/milstone/Mern auth/frontend/src/App.js":"2","/Users/ujjwal/Desktop/Home/milstone/Mern auth/frontend/src/reportWebVitals.js":"3","/Users/ujjwal/Desktop/Home/milstone/Mern auth/frontend/src/components/pages/Home.js":"4","/Users/ujjwal/Desktop/Home/milstone/Mern auth/frontend/src/components/pages/About.js":"5","/Users/ujjwal/Desktop/Home/milstone/Mern auth/frontend/src/components/pages/Register.js":"6","/Users/ujjwal/Desktop/Home/milstone/Mern auth/frontend/src/components/Navbar.js":"7","/Users/ujjwal/Desktop/Home/milstone/Mern auth/frontend/src/components/pages/Login.js":"8","/Users/ujjwal/Desktop/Home/milstone/Mern auth/frontend/src/components/layouts/auth/AuthToken.js":"9","/Users/ujjwal/Desktop/Home/milstone/Mern auth/frontend/src/components/layouts/auth/AuthState.js":"10","/Users/ujjwal/Desktop/Home/milstone/Mern auth/frontend/src/components/layouts/auth/ProtectRoute.js":"11","/Users/ujjwal/Desktop/Home/milstone/Mern auth/frontend/src/components/layouts/auth/AuthContext.js":"12","/Users/ujjwal/Desktop/Home/milstone/Mern auth/frontend/src/components/layouts/auth/AuthReducer.js":"13","/Users/ujjwal/Desktop/Home/milstone/Mern auth/frontend/src/components/layouts/auth/action.js":"14","/Users/ujjwal/Desktop/Home/milstone/Mern auth/frontend/src/components/pages/PostForm.js":"15","/Users/ujjwal/Desktop/Home/milstone/Mern auth/frontend/src/components/pages/poststyle.js":"16","/Users/ujjwal/Desktop/Home/milstone/Mern auth/frontend/src/components/layouts/post/PostState.js":"17","/Users/ujjwal/Desktop/Home/milstone/Mern auth/frontend/src/components/layouts/post/PostReducer.js":"18","/Users/ujjwal/Desktop/Home/milstone/Mern auth/frontend/src/components/layouts/post/PostContext.js":"19","/Users/ujjwal/Desktop/Home/milstone/Mern auth/frontend/src/components/layouts/post/AllPost.js":"20","/Users/ujjwal/Desktop/Home/milstone/Mern auth/frontend/src/components/layouts/post/PostItem.js":"21","/Users/ujjwal/Desktop/Home/milstone/Mern auth/frontend/src/components/layouts/post/poststyle.js":"22","/Users/ujjwal/Desktop/Home/milstone/Mern auth/frontend/src/components/layouts/post/allpoststyle.js":"23","/Users/ujjwal/Desktop/Home/milstone/Mern auth/frontend/src/components/layouts/post/AllPostByUser.js":"24","/Users/ujjwal/Desktop/Home/milstone/Mern auth/frontend/src/components/layouts/post/PostItemByUser.js":"25"},{"size":503,"mtime":1612585331193,"results":"26","hashOfConfig":"27"},{"size":1387,"mtime":1612585508675,"results":"28","hashOfConfig":"27"},{"size":362,"mtime":1612107371929,"results":"29","hashOfConfig":"27"},{"size":297,"mtime":1612518429929,"results":"30","hashOfConfig":"27"},{"size":317,"mtime":1612523516016,"results":"31","hashOfConfig":"27"},{"size":1976,"mtime":1612118226801,"results":"32","hashOfConfig":"27"},{"size":2626,"mtime":1612673498598,"results":"33","hashOfConfig":"27"},{"size":1599,"mtime":1612168597611,"results":"34","hashOfConfig":"27"},{"size":241,"mtime":1612117939916,"results":"35","hashOfConfig":"27"},{"size":2605,"mtime":1612539367204,"results":"36","hashOfConfig":"27"},{"size":686,"mtime":1612540819805,"results":"37","hashOfConfig":"27"},{"size":97,"mtime":1612114925361,"results":"38","hashOfConfig":"27"},{"size":1346,"mtime":1612541213366,"results":"39","hashOfConfig":"27"},{"size":775,"mtime":1612630920267,"results":"40","hashOfConfig":"27"},{"size":2856,"mtime":1612624126676,"results":"41","hashOfConfig":"27"},{"size":424,"mtime":1612454994838,"results":"42","hashOfConfig":"27"},{"size":3014,"mtime":1612631448549,"results":"43","hashOfConfig":"27"},{"size":1536,"mtime":1612631109419,"results":"44","hashOfConfig":"27"},{"size":102,"mtime":1612456904707,"results":"45","hashOfConfig":"27"},{"size":836,"mtime":1612587652457,"results":"46","hashOfConfig":"27"},{"size":3848,"mtime":1612631593665,"results":"47","hashOfConfig":"27"},{"size":962,"mtime":1612512930850,"results":"48","hashOfConfig":"27"},{"size":1339,"mtime":1612517751080,"results":"49","hashOfConfig":"27"},{"size":1065,"mtime":1612628827267,"results":"50","hashOfConfig":"27"},{"size":2789,"mtime":1612629973439,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"san359",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"54"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"54"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"54"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"54"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"54"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"54"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"54"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"54"},"/Users/ujjwal/Desktop/Home/milstone/Mern auth/frontend/src/index.js",[],["111","112"],"/Users/ujjwal/Desktop/Home/milstone/Mern auth/frontend/src/App.js",[],"/Users/ujjwal/Desktop/Home/milstone/Mern auth/frontend/src/reportWebVitals.js",[],"/Users/ujjwal/Desktop/Home/milstone/Mern auth/frontend/src/components/pages/Home.js",[],"/Users/ujjwal/Desktop/Home/milstone/Mern auth/frontend/src/components/pages/About.js",[],"/Users/ujjwal/Desktop/Home/milstone/Mern auth/frontend/src/components/pages/Register.js",[],"/Users/ujjwal/Desktop/Home/milstone/Mern auth/frontend/src/components/Navbar.js",["113"],"/Users/ujjwal/Desktop/Home/milstone/Mern auth/frontend/src/components/pages/Login.js",[],"/Users/ujjwal/Desktop/Home/milstone/Mern auth/frontend/src/components/layouts/auth/AuthToken.js",[],"/Users/ujjwal/Desktop/Home/milstone/Mern auth/frontend/src/components/layouts/auth/AuthState.js",[],"/Users/ujjwal/Desktop/Home/milstone/Mern auth/frontend/src/components/layouts/auth/ProtectRoute.js",[],"/Users/ujjwal/Desktop/Home/milstone/Mern auth/frontend/src/components/layouts/auth/AuthContext.js",[],"/Users/ujjwal/Desktop/Home/milstone/Mern auth/frontend/src/components/layouts/auth/AuthReducer.js",["114","115"],"import{\n    REGISTER_USER,\n    LOAD_USER,\n    LOGIN_USER,\n    LOGOUT,\n    REGISTRATION_FAILED,\n    LOGIN_FAILED\n} from './action'\n\nexport default (state,action)=>{\n    switch(action.type){\n        case REGISTER_USER:\n            case LOGIN_USER:\n            localStorage.setItem('token',action.payload.token);\n            localStorage.setItem('id',action.payload.user._id);\n            return{\n                ...state,\n                ...action.payload,\n                isAuthenticated:true,\n                loading:false,\n                user:action.payload.user\n\n            };\n            case REGISTRATION_FAILED:\n            case LOGIN_FAILED:  \n            case LOGOUT:  \n                localStorage.clear();\n                console.log(localStorage);\n                return{\n                    ...state,\n                    token:null,\n                    isAuthenticated:false,\n                    loading:true,\n                    user:null,\n                    error:action.payload\n                }\n            case LOAD_USER:{\n                return{\n                    ...state,\n                    isAuthenticated:true,\n                    loading:false,\n                    user:action.payload,\n                }\n            };\n            default:\n                return{\n                    ...state\n                }\n    }\n}","/Users/ujjwal/Desktop/Home/milstone/Mern auth/frontend/src/components/layouts/auth/action.js",[],"/Users/ujjwal/Desktop/Home/milstone/Mern auth/frontend/src/components/pages/PostForm.js",["116","117","118","119","120"],"import React, { useContext, useEffect,useState } from 'react'\nimport AuthContext from '../layouts/auth/AuthContext'\nimport { TextField, Button, Typography, Paper } from '@material-ui/core';\nimport FileBase from 'react-file-base64';\nimport useStyles from './poststyle';\nimport PostContext from '../layouts/post/PostContext'\n\nconst Service = (props) => {\n    const authContext=useContext(AuthContext)\n    const {isAuthenticated, loadUser}=authContext;\n    const postContext=useContext(PostContext)\n    const {AddPost,current,clearCurrent, updatePost}=postContext;\n    const [postData, setPostData] = useState({ title: '', message: '', tags: '', selectedFile: '' });\n    const { title, message, tags, selectedFile } = postData;\n\n    const classes = useStyles();\n   \n    if(!localStorage.token ){\n        props.history.push('/login')\n            loadUser();}\n     useEffect(() => {\n          if(current){\n              setPostData(current)\n          }else{\n            setPostData({ title: '', message: '', tags: '', selectedFile: '' });\n          }\n        \n     },[postContext,current] )\n\n\n    const clear = () => {\n        //setCurrentId(0);\n        setPostData({ title: '', message: '', tags: '', selectedFile: '' });\n        clearCurrent()\n      };\n\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        if(current===null){\n            AddPost(postData)\n        }else{\n            updatePost(postData)\n        }\n        \n       \n        props.history.push('/about')\n      };\n    return (\n          <Paper className={classes.paper}>\n        <form autoComplete=\"off\" noValidate className={`${classes.root} ${classes.form}`} onSubmit={handleSubmit}>\n          <Typography variant=\"h6\">{current ? `Edit Post ` : 'Creating a Memory'}</Typography>\n          <TextField name=\"title\" variant=\"outlined\" label=\"Title\" fullWidth value={postData.title} onChange={(e) => setPostData({ ...postData, title: e.target.value })} />\n          <TextField name=\"message\" variant=\"outlined\" label=\"Message\" fullWidth multiline rows={4} value={postData.message} onChange={(e) => setPostData({ ...postData, message: e.target.value })} />\n          <TextField name=\"tags\" variant=\"outlined\" label=\"Tags (coma separated)\" fullWidth value={postData.tags} onChange={(e) => setPostData({ ...postData, tags: e.target.value.split(',') })} />\n          <div className={classes.fileInput}><FileBase type=\"file\" multiple={false} onDone={({ base64 }) => setPostData({ ...postData, selectedFile: base64 })} /></div>\n          <Button className={classes.buttonSubmit} variant=\"contained\" color=\"primary\" size=\"large\" type=\"submit\" fullWidth>{current ? `Update Post ` : 'Add Memory'}</Button>\n          <Button variant=\"contained\" color=\"secondary\" size=\"small\" onClick={clear} fullWidth>Clear</Button>\n        </form>\n      </Paper>\n  \n    )\n}\n\nexport default Service\n","/Users/ujjwal/Desktop/Home/milstone/Mern auth/frontend/src/components/pages/poststyle.js",[],"/Users/ujjwal/Desktop/Home/milstone/Mern auth/frontend/src/components/layouts/post/PostState.js",["121","122","123","124","125"],"import React, { useReducer } from \"react\";\nimport PostContext from \"./PostContext\";\nimport PostReducer from \"./PostReducer\";\nimport axios from \"axios\";\nimport {\n  ADD_POST,\n  DELETE_POST,\n  UPDATE_POST,\n  SET_CURRENT_POST,\n  CLEAR_CURRENT_POST,\n  GET_POST,\n  FILTER_POST,\n  CLEAR_FILTER_POST,\n  SET_ALERT,\n  CLEAR_ALERT,\n  GET_POSTBYUSER,\n  LIKE,\n} from \"../auth/action\";\n\nconst PostState = (props) => {\n  const initialState = {\n    posts: [],\n    current: null,\n  };\n  const [state, dispatch] = useReducer(PostReducer, initialState);\n\n  const AddPost = async (post) => {\n    const config = {\n      headers: {\n        \"Conten-Type\": \"application/json\",\n      },\n    };\n    try {\n      const res = await axios.post(\"/api/posts\", post, config);\n      dispatch({\n        type: ADD_POST,\n        payload: post,\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const GetPost = async () => {\n    const config = {\n      headers: {\n        \"Conten-Type\": \"application/json\",\n      },\n    };\n    try {\n      const res = await axios.get(\"/api/posts\", config);\n      dispatch({\n        type: GET_POST,\n        payload: res.data,\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const GetPostByUser = async (id) => {\n    console.log(id);\n    try {\n      const res = await axios.get(`/api/posts/${id}`);\n      console.log(res.data);\n      dispatch({\n        type: GET_POSTBYUSER,\n        payload: res.data,\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const deletePost = async (_id) => {\n    try {\n      console.log(_id, \"ahscjgasvcgav\");\n      await axios.delete(`/api/posts/${_id}`);\n      dispatch({ type: DELETE_POST, payload: _id });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const setCurrent = (post) => {\n    dispatch({ type: SET_CURRENT_POST, payload: post });\n  };\n  const clearCurrent = () => {\n    dispatch({ type: CLEAR_CURRENT_POST });\n  };\n  const updatePost = async (post) => {\n    const config = {\n      headers: {\n        \"Conten-Type\": \"application/json\",\n      },\n    };\n    try {\n      console.log(post._id, \"ahscjgasvcgav\");\n      const res = await axios.patch(`/api/posts/${post._id}`, post, config);\n      dispatch({ type: UPDATE_POST, payload: res.data });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const likePost = async (_id) => {\n    const config = {\n      headers: {\n        \"Conten-Type\": \"application/json\",\n      },\n    };\n    try {\n      const res = await axios.patch(`/api/posts/${_id}/likePost`, config);\n      dispatch({ type: LIKE, payload: res.data });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  return (\n    <PostContext.Provider\n      value={{\n        posts: state.posts,\n        current: state.current,\n        AddPost,\n        GetPost,\n        GetPostByUser,\n        deletePost,\n        setCurrent,\n        clearCurrent,\n        updatePost,\n        likePost,\n      }}\n    >\n      {props.children}\n    </PostContext.Provider>\n  );\n};\n\nexport default PostState;\n","/Users/ujjwal/Desktop/Home/milstone/Mern auth/frontend/src/components/layouts/post/PostReducer.js",["126","127","128","129","130"],"import {\n  ADD_POST,\n  DELETE_POST,\n  UPDATE_POST,\n  SET_CURRENT_POST,\n  CLEAR_CURRENT_POST,\n  GET_POST,\n  FILTER_POST,\n  CLEAR_FILTER_POST,\n  SET_ALERT,\n  CLEAR_ALERT,\n  GET_POSTBYUSER,\n  LIKE\n} from \"../auth/action\";\nexport default (state, action) => {\n  switch (action.type) {\n    case ADD_POST:\n      return {\n        ...state,\n        posts: [...state.posts, action.payload],\n        loading: false,\n      };\n      case GET_POST:\n          {\n          return{\n              ...state,\n              posts:action.payload,\n              loading:false\n          }\n      }\n      case GET_POSTBYUSER:\n          {\n          return{\n              ...state,\n              posts:action.payload,\n              loading:false\n          }\n      }\n      case DELETE_POST:\n          return{\n              ...state,\n              posts:state.posts.filter(post => post._id !== action.payload),\n              loading:false\n          }\n      case SET_CURRENT_POST:\n          return{\n              ...state,\n              current:action.payload\n          }   \n      case CLEAR_CURRENT_POST:\n          return{\n              ...state,\n              current:null\n          }   \n       case UPDATE_POST:\n        return {\n            ...state,\n            posts:state.posts.map((post) => (post._id === action.payload._id ? action.payload : post))\n        }\n        case LIKE:\n      return{\n          ...state,\n        posts:state.posts.map((post) => (post._id === action.payload._id ? action.payload : post))\n      }\n    default:\n      return state;\n  }\n};\n","/Users/ujjwal/Desktop/Home/milstone/Mern auth/frontend/src/components/layouts/post/PostContext.js",[],"/Users/ujjwal/Desktop/Home/milstone/Mern auth/frontend/src/components/layouts/post/AllPost.js",["131"],"import React, { useContext,useEffect } from \"react\";\nimport PostContext from \"./PostContext\";\nimport { Grid, CircularProgress } from '@material-ui/core';\nimport PostItem from './PostItem'\nimport useStyles from './allpoststyle';\n\n\n\nconst AllPost = () => {\n    const postContext = useContext(PostContext);\n    const {posts,GetPost} =postContext;\n    const classes = useStyles();\n  \n    useEffect(()=>{\n        GetPost();\n      },[]);\n    return (\n        !posts.length ? <CircularProgress /> : (\n            <Grid className={classes.container} container alignItems=\"stretch\" spacing={3}>\n              {posts.map((post) => (\n                <Grid key={post._id} item xs={12} sm={6} md={6}>\n                  <PostItem post={post}  />\n                </Grid>\n              ))}\n            </Grid>\n        )\n    )\n}\n\nexport default AllPost\n","/Users/ujjwal/Desktop/Home/milstone/Mern auth/frontend/src/components/layouts/post/PostItem.js",["132","133","134","135","136","137"],"import React, { useContext } from 'react'\nimport { Card, CardActions, CardContent, CardMedia, Button, Typography } from '@material-ui/core/';\nimport ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport ThumbUpAltOutlined from '@material-ui/icons/ThumbUpAltOutlined';\nimport useStyles from './poststyle';\nimport moment from 'moment'\nimport PostContext from './PostContext';\n\nconst PostItem = ({post}) => {\n    const postContext=useContext(PostContext)\n    const {likePost} =postContext\n    const {_id,title,message,tags,selectedFile}=post\n    const classes = useStyles();\n    const Likes = () => {\n        if (post.likes.length > 0) {\n          return post.likes.find((like) => like === (localStorage.id))\n            ? (\n              <><ThumbUpAltIcon fontSize=\"small\" />&nbsp;{post.likes.length > 2 ? `You and ${post.likes.length - 1} others` : `${post.likes.length} like${post.likes.length > 1 ? 's' : ''}` }</>\n            ) : (\n              <><ThumbUpAltOutlined fontSize=\"small\" />&nbsp;{post.likes.length} {post.likes.length === 1 ? 'Like' : 'Likes'}</>\n            );\n        }\n    \n        return <>\n        <ThumbUpAltOutlined fontSize=\"small\" />\n        &nbsp;Like\n        \n        </>;\n      };\n      const Coments = () => {\n        // if (post.likes.length > 0) {\n        //   return post.likes.find((like) => like === (user?.result?.googleId || user?.result?._id))\n        //     ? (\n        //       <><ThumbUpAltIcon fontSize=\"small\" />&nbsp;{post.likes.length > 2 ? `You and ${post.likes.length - 1} others` : `${post.likes.length} like${post.likes.length > 1 ? 's' : ''}` }</>\n        //     ) : (\n        //       <><ThumbUpAltOutlined fontSize=\"small\" />&nbsp;{post.likes.length} {post.likes.length === 1 ? 'Like' : 'Likes'}</>\n        //     );\n        // }\n    \n        return <>\n        <DeleteIcon fontSize=\"small\" />\n        &nbsp;Comment\n        \n        </>;\n      };\n    return (\n        <Card className={classes.card}>\n        <CardMedia className={classes.media} image={post.selectedFile || 'https://user-images.githubusercontent.com/194400/49531010-48dad180-f8b1-11e8-8d89-1e61320e1d82.png'} title={post.title} />\n        <div className={classes.overlay}>\n          <Typography variant=\"h6\">{post.name}</Typography>\n          <Typography variant=\"body2\">{moment(post.createdAt).fromNow()}</Typography>\n        </div>\n        {/* {(user?.result?.googleId === post?.creator || user?.result?._id === post?.creator) && (\n        <div className={classes.overlay2}>\n          <Button onClick={() => setCurrentId(post._id)} style={{ color: 'white' }} size=\"small\">\n            <MoreHorizIcon fontSize=\"default\" />\n          </Button>\n        </div>\n        )} */}\n        <div className={classes.details}>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"h2\">{post.tags.map((tag) => `#${tag} `)}</Typography>\n        </div>\n        <Typography className={classes.title} gutterBottom variant=\"h5\" component=\"h2\">{post.title}</Typography>\n        <CardContent>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">{post.message}</Typography>\n        </CardContent>\n        <CardActions className={classes.cardActions}>\n          <Button size=\"small\" color=\"primary\" onClick={() => likePost(post._id)} >\n            <Likes />\n          </Button>\n          {/* {(user?.result?.googleId === post?.creator || user?.result?._id === post?.creator) && ( */}\n          {/* <Button size=\"small\" color=\"secondary\" >\n            <DeleteIcon fontSize=\"small\" /> Delete\n          </Button> */}\n          {/* )} */}\n          <Button size=\"small\" color=\"primary\" >\n            <Coments />\n          </Button>\n        </CardActions>\n      </Card>\n    )\n}\n\nexport default PostItem\n","/Users/ujjwal/Desktop/Home/milstone/Mern auth/frontend/src/components/layouts/post/poststyle.js",[],"/Users/ujjwal/Desktop/Home/milstone/Mern auth/frontend/src/components/layouts/post/allpoststyle.js",[],"/Users/ujjwal/Desktop/Home/milstone/Mern auth/frontend/src/components/layouts/post/AllPostByUser.js",["138"],"import React, { useContext, useEffect } from \"react\";\nimport PostContext from \"./PostContext\";\nimport { Grid, CircularProgress } from \"@material-ui/core\";\n\nimport useStyles from \"./allpoststyle\";\nimport AuthToken from '../auth/AuthToken'\nimport PostItemByUser from \"./PostItemByUser\";\n\nconst AllPostByUser = (props) => {\n  const postContext = useContext(PostContext);\n  const { posts, GetPostByUser } = postContext;\n\n  const classes = useStyles();\n  if (!localStorage.token) {\n    props.history.push(\"/login\");\n    //    loadUser();\n  }else{\n    AuthToken(localStorage.token);\n    console.log('tokensakjbcvaskbvcas');\n  }\n  useEffect(() => {\n    GetPostByUser(localStorage.id);\n  }, []);\n  return !posts.length ? (\n    <CircularProgress />\n  ) : (\n    <Grid\n      className={classes.container}\n      container\n      alignItems=\"stretch\"\n      spacing={3}\n    >\n      {posts.map((post) => (\n        <Grid key={post._id} item xs={12} sm={6} md={6}>\n          <PostItemByUser post={post} />\n        </Grid>\n      ))}\n    </Grid>\n  );\n};\n\nexport default AllPostByUser;\n","/Users/ujjwal/Desktop/Home/milstone/Mern auth/frontend/src/components/layouts/post/PostItemByUser.js",["139","140","141","142","143","144"],"import React,{useContext} from 'react'\nimport { Card, CardActions, CardContent, CardMedia, Button, Typography } from '@material-ui/core/';\nimport ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport ThumbUpAltOutlined from '@material-ui/icons/ThumbUpAltOutlined';\nimport useStyles from './poststyle';\nimport moment from 'moment'\nimport PostContext from './PostContext'\nimport { useHistory } from 'react-router-dom';\n\nconst PostItemByUser = ({post}) => {\n    const postContext = useContext(PostContext)\n    const {deletePost,setCurrent,clearCurrent}=postContext\n    const {_id,title,message,tags,selectedFile}=post\n    const classes = useStyles();\n    const history=useHistory()\n    const onDelete=()=>{\n        deletePost(_id);\n        clearCurrent()\n    }\n    const onSet=() => {\n        setCurrent(post)\n        console.log(post);\n        history.push('/service')\n    }\n  \n    return (\n        <Card className={classes.card}>\n        <CardMedia className={classes.media} image={post.selectedFile || 'https://user-images.githubusercontent.com/194400/49531010-48dad180-f8b1-11e8-8d89-1e61320e1d82.png'} title={post.title} />\n        <div className={classes.overlay}>\n          <Typography variant=\"h6\">{post.name}</Typography>\n          <Typography variant=\"body2\">{moment(post.createdAt).fromNow()}</Typography>\n        </div>\n        {/* {(user?.result?.googleId === post?.creator || user?.result?._id === post?.creator) && ( */}\n        <div className={classes.overlay2}>\n          <Button onClick={onSet} style={{ color: 'white' }} size=\"small\">\n            <MoreHorizIcon fontSize=\"default\" />\n          </Button>\n          <Button size=\"small\" color=\"secondary\" onClick={onDelete}>\n            <DeleteIcon fontSize=\"small\" /> Delete\n          </Button>\n        </div>\n        {/* )} */}\n        <div className={classes.details}>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"h2\">{post.tags.map((tag) => `#${tag} `)}</Typography>\n        </div>\n        <Typography className={classes.title} gutterBottom variant=\"h5\" component=\"h2\">{post.title}</Typography>\n        <CardContent>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">{post.message}</Typography>\n        </CardContent>\n        <CardActions className={classes.cardActions}>\n          {/* <Button size=\"small\" color=\"primary\">\n            <Likes />\n          </Button> */}\n          {/* {(user?.result?.googleId === post?.creator || user?.result?._id === post?.creator) && ( */}\n         \n          {/* )} */}\n        </CardActions>\n      </Card>\n    )\n}\n// disabled={!user?.result} onClick={() => dispatch(likePost(post._id))}\nexport default PostItemByUser\n",{"ruleId":"145","replacedBy":"146"},{"ruleId":"147","replacedBy":"148"},{"ruleId":"149","severity":1,"message":"150","line":8,"column":17,"nodeType":"151","messageId":"152","endLine":8,"endColumn":32},{"ruleId":"153","severity":1,"message":"154","line":10,"column":1,"nodeType":"155","endLine":50,"endColumn":2},{"ruleId":"156","severity":1,"message":"157","line":37,"column":28,"nodeType":"158","messageId":"159","endLine":44,"endColumn":14},{"ruleId":"149","severity":1,"message":"150","line":10,"column":12,"nodeType":"151","messageId":"152","endLine":10,"endColumn":27},{"ruleId":"149","severity":1,"message":"160","line":14,"column":13,"nodeType":"151","messageId":"152","endLine":14,"endColumn":18},{"ruleId":"149","severity":1,"message":"161","line":14,"column":20,"nodeType":"151","messageId":"152","endLine":14,"endColumn":27},{"ruleId":"149","severity":1,"message":"162","line":14,"column":29,"nodeType":"151","messageId":"152","endLine":14,"endColumn":33},{"ruleId":"149","severity":1,"message":"163","line":14,"column":35,"nodeType":"151","messageId":"152","endLine":14,"endColumn":47},{"ruleId":"149","severity":1,"message":"164","line":12,"column":3,"nodeType":"151","messageId":"152","endLine":12,"endColumn":14},{"ruleId":"149","severity":1,"message":"165","line":13,"column":3,"nodeType":"151","messageId":"152","endLine":13,"endColumn":20},{"ruleId":"149","severity":1,"message":"166","line":14,"column":3,"nodeType":"151","messageId":"152","endLine":14,"endColumn":12},{"ruleId":"149","severity":1,"message":"167","line":15,"column":3,"nodeType":"151","messageId":"152","endLine":15,"endColumn":14},{"ruleId":"149","severity":1,"message":"168","line":34,"column":13,"nodeType":"151","messageId":"152","endLine":34,"endColumn":16},{"ruleId":"149","severity":1,"message":"164","line":8,"column":3,"nodeType":"151","messageId":"152","endLine":8,"endColumn":14},{"ruleId":"149","severity":1,"message":"165","line":9,"column":3,"nodeType":"151","messageId":"152","endLine":9,"endColumn":20},{"ruleId":"149","severity":1,"message":"166","line":10,"column":3,"nodeType":"151","messageId":"152","endLine":10,"endColumn":12},{"ruleId":"149","severity":1,"message":"167","line":11,"column":3,"nodeType":"151","messageId":"152","endLine":11,"endColumn":14},{"ruleId":"153","severity":1,"message":"154","line":15,"column":1,"nodeType":"155","endLine":68,"endColumn":3},{"ruleId":"169","severity":1,"message":"170","line":16,"column":9,"nodeType":"171","endLine":16,"endColumn":11,"suggestions":"172"},{"ruleId":"149","severity":1,"message":"173","line":5,"column":8,"nodeType":"151","messageId":"152","endLine":5,"endColumn":21},{"ruleId":"149","severity":1,"message":"174","line":14,"column":12,"nodeType":"151","messageId":"152","endLine":14,"endColumn":15},{"ruleId":"149","severity":1,"message":"160","line":14,"column":16,"nodeType":"151","messageId":"152","endLine":14,"endColumn":21},{"ruleId":"149","severity":1,"message":"161","line":14,"column":22,"nodeType":"151","messageId":"152","endLine":14,"endColumn":29},{"ruleId":"149","severity":1,"message":"162","line":14,"column":30,"nodeType":"151","messageId":"152","endLine":14,"endColumn":34},{"ruleId":"149","severity":1,"message":"163","line":14,"column":35,"nodeType":"151","messageId":"152","endLine":14,"endColumn":47},{"ruleId":"169","severity":1,"message":"175","line":23,"column":6,"nodeType":"171","endLine":23,"endColumn":8,"suggestions":"176"},{"ruleId":"149","severity":1,"message":"177","line":3,"column":8,"nodeType":"151","messageId":"152","endLine":3,"endColumn":22},{"ruleId":"149","severity":1,"message":"178","line":6,"column":8,"nodeType":"151","messageId":"152","endLine":6,"endColumn":26},{"ruleId":"149","severity":1,"message":"160","line":15,"column":16,"nodeType":"151","messageId":"152","endLine":15,"endColumn":21},{"ruleId":"149","severity":1,"message":"161","line":15,"column":22,"nodeType":"151","messageId":"152","endLine":15,"endColumn":29},{"ruleId":"149","severity":1,"message":"162","line":15,"column":30,"nodeType":"151","messageId":"152","endLine":15,"endColumn":34},{"ruleId":"149","severity":1,"message":"163","line":15,"column":35,"nodeType":"151","messageId":"152","endLine":15,"endColumn":47},"no-native-reassign",["179"],"no-negated-in-lhs",["180"],"no-unused-vars","'isAuthenticated' is assigned a value but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'title' is assigned a value but never used.","'message' is assigned a value but never used.","'tags' is assigned a value but never used.","'selectedFile' is assigned a value but never used.","'FILTER_POST' is defined but never used.","'CLEAR_FILTER_POST' is defined but never used.","'SET_ALERT' is defined but never used.","'CLEAR_ALERT' is defined but never used.","'res' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'GetPost'. Either include it or remove the dependency array.","ArrayExpression",["181"],"'MoreHorizIcon' is defined but never used.","'_id' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'GetPostByUser'. Either include it or remove the dependency array.",["182"],"'ThumbUpAltIcon' is defined but never used.","'ThumbUpAltOutlined' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"183","fix":"184"},{"desc":"185","fix":"186"},"Update the dependencies array to be: [GetPost]",{"range":"187","text":"188"},"Update the dependencies array to be: [GetPostByUser]",{"range":"189","text":"190"},[427,429],"[GetPost]",[683,685],"[GetPostByUser]"]